<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paolo Prem</title>
    <link>/</link>
    <description>Recent content on Paolo Prem</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>/posts/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&#39;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&#39;t cover using CSS to style your theme.
We&#39;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>/posts/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/migrate-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&#39;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>My favorite albums</title>
      <link>/charts/album/</link>
      <pubDate>Fri, 15 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/charts/album/</guid>
      <description>This is a list of all my favorite albums of all time. It is not supposed to have an order, I will simply put a new album if I think that album is one of the greatest album ever done (of those I listened to so far).
WARNING: this site is currently under development as well as the content of this page!
Uncle Meat - Frank Zappa Absolutely my favorite Zappa album.</description>
    </item>
    
    <item>
      <title>Paolo Prem</title>
      <link>/about/</link>
      <pubDate>Thu, 14 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>Hi, I&#39;m Paolo Prem, this is my website and I will spend just few words about myself. My passion about computers and IT in general started very early, with the few video games I had and I could play on my potato computer, which I built myself. It was made of all the stuff my father could bring me home, motherboards, RAMs, hard disks, GPUs and so on, all parts that someone was throwing away.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>/posts/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/goisforlovers/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>/posts/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/posts/hugoisforlovers/</guid>
      <description>Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title></title>
      <link>/attacker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/attacker/</guid>
      <description>   function parseString() { var request = document.getElementById(&#39;request&#39;).value; var body = document.getElementById(&#39;body&#39;).value; var args = request.split(&#39; &#39;); var params = []; var old_key_value = &#34;&#34;; var temp_value = &#34;&#34;; for (var i = 0; i You are under attack!!  My first paragraph.
  </description>
    </item>
    
    <item>
      <title></title>
      <link>/startpage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/startpage/</guid>
      <description>--    $(function(){ var includes = $(&#39;[data-include]&#39;); jQuery.each(includes, function(){ var file = &#39;views/&#39; + $(this).data(&#39;include&#39;) + &#39;.html&#39;; $(this).load(file); }); });  Startpage    Welcome                      --   
Next Post 
       BTC Price:      Show content     Next Post</description>
    </item>
    
  </channel>
</rss>