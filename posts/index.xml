<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Paolo Prem</title>
        <link>/posts/</link>
        <description>Recent content in Posts on Paolo Prem</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 07 Jan 2020 00:00:00 +0000</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Goodbye ranger, welcome lf!</title>
            <link>/posts/goodbye_ranger_welcome_lf/</link>
            <pubDate>Tue, 07 Jan 2020 00:00:00 +0000</pubDate>
            
            <guid>/posts/goodbye_ranger_welcome_lf/</guid>
            <description>When I first saw Ranger, I immediately loved it. You can manage your files entirely from your command line in an awesome way. Here is a screenshot taken from their official repository:
Its biggest flaw? Python!
I started using it instead of the cd command to navigate through my filesystem and I noticed an incredibly annoying 1/2 seconds delay before its interface appears on my terminal. This is the reason I started to look for some faster alternatives.</description>
            <content type="html"><![CDATA[<p>When I first saw <a href="https://github.com/ranger/ranger">Ranger</a>, I immediately loved it. You can manage your files entirely
from your command line in an awesome way. Here is a screenshot taken from their official
repository:</p>
<p><img src="/img/blog/ranger.png" alt="Ranger screenshot"></p>
<p>Its biggest flaw? Python!</p>
<p>I started using it instead of the <code>cd</code> command to navigate through my filesystem and I
noticed an incredibly annoying 1/2 seconds delay before its interface appears on my
terminal. This is the reason I started to look for some faster alternatives.</p>
<p>I tried <a href="https://github.com/vifm/vifm">vifm</a> and <a href="https://github.com/jarun/nnn">nnn</a> but then I found <a href="https://github.com/gokcehan/lf">lf</a>, a file manager written in go.
Not only it is faster than ranger, but it also looks very similar. Here is a
screenshot taken from their official repository:</p>
<p><img src="/img/blog/lf.png" alt="Lf screenshot"></p>
<p>By default, when you close lf with the <em>q</em> key, it doesn&rsquo;t exit in the directory
currently highlighted by lf but it returns to the one where you ran it. Since I am
using it to navigate into my filesystem, I searched in their documentation how to
achieve such goal. They provide a snippet of code that keeps track of the current
directory and automatically <code>cd</code> into that. Here is the snippet:</p>
<pre><code>lfcd () {
    tmp=&quot;$(mktemp)&quot;
    /bin/lf -last-dir-path=&quot;$tmp&quot; &quot;$@&quot;
    if [ -f &quot;$tmp&quot; ]; then
        dir=&quot;$(cat &quot;$tmp&quot;)&quot;
        rm -f &quot;$tmp&quot;
        if [ -d &quot;$dir&quot; ]; then
            if [ &quot;$dir&quot; != &quot;$(pwd)&quot; ]; then
                cd &quot;$dir&quot;
            fi
        fi
    fi
}
</code></pre><p>Therefore, I created a new file, called <em>lfcd</em> and I sourced it in my <code>.zshrc</code>
file (if you use bash, source it in you <code>.bashrc</code> file):</p>
<pre><code>source &quot;/path/to/my/lfcd/file/lfcd.sh&quot;
</code></pre>]]></content>
        </item>
        
    </channel>
</rss>
